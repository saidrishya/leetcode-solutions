/*
Given a singly linked list, determine if it is a palindrome.

Example 1:

Input: 1->2
Output: false
Example 2:

Input: 1->2->2->1
Output: true
*/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        ListNode *h=head;
        stack<int> st;
        while(h){
            st.push(h->val);
            h=h->next;
        }
        while(head && !st.empty()){
            if(st.top() != head->val){
                return false;
            }
            st.pop();
            head=head->next;
        }
return true;
    }
};
