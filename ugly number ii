/*
Write a program to find the n-th ugly number.

Ugly numbers are positive numbers whose prime factors only include 2, 3, 5. 

Example:

Input: n = 10
Output: 12
Explanation: 1, 2, 3, 4, 5, 6, 8, 9, 10, 12 is the sequence of the first 10 ugly numbers.
Note:  

1 is typically treated as an ugly number.
n does not exceed 1690.
*/

class Solution {
public:
    int nthUglyNumber(int n) {
        return result[n-1];
    }
    static vector<long long> initial()
    {
        vector<long long> res;
        res.push_back(1);
        for(int i = 1; i < 1690; ++i)
        {
            long long multi2 = (*upper_bound(res.begin(), res.end(), res.back()/2)) * 2;
            long long multi3 = (*upper_bound(res.begin(), res.end(), res.back()/3)) * 3;
            long long multi5 = (*upper_bound(res.begin(), res.end(), res.back()/5)) * 5;
            res.push_back(min(min(multi2, multi3), multi5));
        }
        return res;
    }
    static vector<long long> result;
};
vector<long long> Solution::result = initial();
