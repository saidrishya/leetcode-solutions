/*
Given a singly linked list where elements are sorted in ascending order, convert it to a height balanced BST.

For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never 
differ by more than 1.

Example:

Given the sorted linked list: [-10,-3,0,5,9],

One possible answer is: [0,-3,9,-10,null,5], which represents the following height balanced BST:

      0
     / \
   -3   9
   /   /
 -10  5
 */
 
class Solution {
public:
    TreeNode* sortedListToBST(ListNode* head) {
       if(head== nullptr)
            return NULL;
        if(head->next == NULL)
        {
            TreeNode *res = new TreeNode(head->val);
            return res;
        }
        ListNode *slow=head, *fast=head->next->next;
        while(fast && fast->next){
             fast = fast->next->next;
             slow = slow->next;
        }
        
    ListNode *p = slow->next;
    TreeNode *res = new TreeNode(p->val);
    slow->next = NULL;   //take care here
    res->left = sortedListToBST(head);
    res->right = sortedListToBST(p->next);
    return res;
        
    }
}; 
