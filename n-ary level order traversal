/*
Given an n-ary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).

For example, given a 3-ary tree:

 



 

We should return its level order traversal:

[
     [1],
     [3,2,4],
     [5,6]
]
 

Note:

The depth of the tree is at most 1000.
The total number of nodes is at most 5000.
*/

class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
              vector<vector<int>> res;
         if(root==NULL) {
             return res;
         }
        
        queue<Node*> q;
        q.push(root);
    
    
        while(!q.empty()){
            int size = q.size();
            vector<int> temp;
            while(size-- > 0){
            Node* t= q.front();
                q.pop();
                temp.push_back(t->val);
                for(auto i: t->children)
                     q.push(i);
            }
           res.push_back(temp);
        }
return res;
    }
};
