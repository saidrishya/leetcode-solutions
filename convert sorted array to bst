/*
Given an array where elements are sorted in ascending order, convert it to a height balanced BST.

For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never 
differ by more than 1.

Example:

Given the sorted array: [-10,-3,0,5,9],

One possible answer is: [0,-3,9,-10,null,5], which represents the following height balanced BST:

      0
     / \
   -3   9
   /   /
 -10  5
 */
 
 class Solution {
public:
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        return sortedArrayToBSTRec(nums, 0, nums.size()-1);
    }
    
    TreeNode* sortedArrayToBSTRec(vector<int>& nums, int left, int right) {
        if (left > right) return nullptr;
        
        int mid = left+(right-left)/2;
        
        TreeNode* c = new TreeNode(nums[mid]);
        c->left = sortedArrayToBSTRec(nums, left, mid-1);
        c->right = sortedArrayToBSTRec(nums, mid+1, right);
        
        return c;
    }
};
