/*
Given a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to
bottom.

Example:

Input: [1,2,3,null,5,null,4]
Output: [1, 3, 4]
Explanation:

   1            <---
 /   \
2     3         <---
 \     \
  5     4       <---
  */
  
  class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        vector<int> res;
        if(!root) return res;
        queue<TreeNode*> q;
        q.push(root); //res.push_back(root->val);
        while(!q.empty()){
            int s=q.size();
            while(s--){
                TreeNode *t = q.front();
                q.pop();
                if(t->left) q.push(t->left);
                if(t->right) q.push(t->right);
                if(s-1 < 0) res.push_back(t->val);
            }
        }
return res;
    }
};
