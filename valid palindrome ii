/*
Given a non-empty string s, you may delete at most one character. Judge whether you can make it a palindrome.

Example 1:
Input: "aba"
Output: True
Example 2:
Input: "abca"
Output: True
Explanation: You could delete the character 'c'.
Note:
The string will only contain lowercase characters a-z. The maximum length of the string is 50000.
*/

class Solution {
public:
    bool validPalindrome(string s) {
        int i=0,n=s.size()-1;
        while(i<n){
            if(s[i]!=s[n]){
                return isPalindrome(s,i+1,n) || isPalindrome(s,i,n-1);
            }
            i++;
            n--;
        }
return true;
    }
    
private:
    bool isPalindrome(string s, int i, int j){
        while(i<j){
            if(s[i++]!=s[j--]) return false;
        }
return true;
    }
};
