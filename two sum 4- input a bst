/*
Given a Binary Search Tree and a target number, return true if there exist two elements in the BST such that their sum is equal to the 
given target.

Example 1:

Input: 
    5
   / \
  3   6
 / \   \
2   4   7

Target = 9

Output: True
 

Example 2:

Input: 
    5
   / \
  3   6
 / \   \
2   4   7

Target = 28

Output: False
*/

class Solution {
public:
    bool findTarget(TreeNode* root, int k) {
          vector<int> v;
          inorder(root,v);
          int l=0,h=v.size()-1;
         while(l<h)
          {
              int s=v[l]+v[h];
              if(s==k) return true;
              else if(s>k) h--;
             else l++;
          }
    return false;
    }
private:
    void inorder(TreeNode* r, vector<int> &v){
        if(r){
            inorder(r->left, v);
            v.push_back(r->val);
            inorder(r->right,v);
            }
    }
};
