/*
Given a non negative integer number num. For every numbers i in the range 0 ≤ i ≤ num calculate the number of 1's in their binary 
representation and return them as an array.

Example 1:

Input: 2
Output: [0,1,1]
Example 2:

Input: 5
Output: [0,1,1,2,1,2]
*/

class Solution {
public:
    vector<int> countBits(int num) {
        vector<int> res;
        res.push_back(0);
        for(int i=1; i<=num; i++){
            if((i&1)==0 && i<=num){
                res.push_back(countsetbits(i));
                res.push_back(countsetbits(i)+1);
                i++;
                continue;
            }
            res.push_back(countsetbits(i));
        }
    if(res.size() > num+1) { res.pop_back(); return res; }
    else return res;
        
    }
private:
    int countsetbits(int n){
        int c=0;
        while(n>0){
            c=c+(n&1);
            n=n>>1;
        }
    return c;
    }
};
