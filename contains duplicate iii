/*
Given an array of integers, find out whether there are two distinct indices i and j in the array such that the absolute difference 
between nums[i] and nums[j] is at most t and the absolute difference between i and j is at most k.

Example 1:

Input: nums = [1,2,3,1], k = 3, t = 0
Output: true
Example 2:

Input: nums = [1,0,1,1], k = 1, t = 2
Output: true
Example 3:

Input: nums = [1,5,9,1,5,9], k = 2, t = 3
Output: false
*/

class Solution {
public:
    bool containsNearbyAlmostDuplicate(vector<int>& nums, int k, int t) {
        if(k<0 || t<0) return false;
        multiset<int> m;
        for(int i=0; i<nums.size(); i++){
            
            int a = (nums[i] < INT_MIN+t)? INT_MIN: nums[i]-t;
            int b = (nums[i] > INT_MAX-t)? INT_MAX: nums[i]+t;
             auto it1 = m.lower_bound(a), it2 = m.upper_bound(b);
            if(it1!=it2) return true;
            m.insert(nums[i]);
            if(i-k>=0)  m.erase(m.find(nums[i-k]));
        }
        return false;
        
    }
};
