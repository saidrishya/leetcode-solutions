/*

Given a binary tree, you need to compute the length of the diameter of the tree. The diameter of a binary tree is the length of the longest path between any two nodes in a tree. This path may or may not pass through the root.

Example:
Given a binary tree 
          1
         / \
        2   3
       / \     
      4   5    
   
Return 3, which is the length of the path [4,2,1,3] or [5,2,1,3].
*/


class Solution {
    public int diameterOfBinaryTree(TreeNode root) {
        if(root == null) return 0;
        int lh = height(root.left);
        int rh = height(root.right);
        
        int ld = diameterOfBinaryTree(root.left);
        int rd = diameterOfBinaryTree(root.right);
        
        return max(lh+rh , max(ld,rd));
    }
    
    int height(TreeNode root){
        if(root == null) return 0;
        int l = height(root.left);
        int r = height(root.right);
        if(l>r) return l+1;
        else return r+1;
    }
    
    int max(int a, int v){
        if(a>v) return a;
        else return v;
    }
}
