/*
Given a binary search tree with non-negative values, find the minimum absolute difference between values of any two nodes.

Example:

Input:

   1
    \
     3
    /
   2

Output:
1

Explanation:
The minimum absolute difference is 1, which is the difference between 2 and 1 (or between 2 and 3).
*/

class Solution {
public:
    int getMinimumDifference(TreeNode* root) {
            int min=INT_MAX;
            TreeNode* pre = NULL;
            Inorder(root, pre, min);
            return min;
    }
        void Inorder(TreeNode* root, TreeNode* & pre, int& min)
        {
                if (!root) return;
                Inorder(root->left, pre, min);
                if (pre)
                {
                        if (min>abs(root->val-pre->val))
                                min = abs(root->val-pre->val);
                }
                pre=root;
                Inorder(root->right, pre, min);
        }
};
